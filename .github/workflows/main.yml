name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Build
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Test
        run: dotnet test --no-build --verbosity normal
      # Publish
      - name: Publish
        run: dotnet publish --configuration Release
      - name: Transfer Files
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          source: "Source/bin/x64/Release/net6.0/publish"
          target: "MAAL.API"
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            echo "${{ secrets.PASSWORD }}\n" | sudo -S kill $(ps aux | grep 'MAAL.API.dll' | awk '{print $2}')
            echo "${{ secrets.PASSWORD }}\n" | sudo -S rm -rf /var/www/MAAL.API
            echo "${{ secrets.PASSWORD }}\n" | sudo -S mkdir /var/www/MAAL.API
            echo "${{ secrets.PASSWORD }}\n" | sudo -S mv ~/MAAL.API /var/www/MAAL.API
            echo "${{ secrets.PASSWORD }}\n" | sudo -S mv ~/MAAL.API /var/www/MAAL.API
            echo "${{ secrets.PASSWORD }}\n" | sudo -S dotnet ./MAAL.API/MAAL.API.dll
